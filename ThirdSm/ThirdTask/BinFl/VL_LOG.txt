==8225== Memcheck, a memory error detector
==8225== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8225== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==8225== Command: ./main
==8225== 
==8225== Syscall param write(buf) points to uninitialised byte(s)
==8225==    at 0x4B6D077: write (write.c:26)
==8225==    by 0x492E77D: std::__basic_file<char>::xsputn(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x496DEA0: std::basic_filebuf<char, std::char_traits<char> >::_M_convert_to_external(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x496E2FB: std::basic_filebuf<char, std::char_traits<char> >::overflow(int) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x496E033: std::basic_filebuf<char, std::char_traits<char> >::_M_terminate_output() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x497135E: std::basic_filebuf<char, std::char_traits<char> >::close() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x49731C0: std::basic_ofstream<char, std::char_traits<char> >::close() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x10AC1F: BinaryFile::Write(Phone const&) (BinaryFile.cpp:25)
==8225==    by 0x10AB10: BinaryFile::TextToBinary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (BinaryFile.cpp:17)
==8225==    by 0x10A775: main (main.cpp:13)
==8225==  Address 0x4dbb024 is 20 bytes inside a block of size 8,192 alloc'd
==8225==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==8225==    by 0x496DD03: std::basic_filebuf<char, std::char_traits<char> >::_M_allocate_internal_buffer() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x4971F66: std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x4972FE7: std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Ios_Openmode) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x10ABF2: BinaryFile::Write(Phone const&) (BinaryFile.cpp:23)
==8225==    by 0x10AB10: BinaryFile::TextToBinary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (BinaryFile.cpp:17)
==8225==    by 0x10A775: main (main.cpp:13)
==8225== 
==8225== 
==8225== Process terminating with default action of signal 2 (SIGINT)
==8225==    at 0x4B6D075: write (write.c:26)
==8225==    by 0x4AEDE8C: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==8225==    by 0x4AEF950: new_do_write (fileops.c:449)
==8225==    by 0x4AEF950: _IO_new_do_write (fileops.c:426)
==8225==    by 0x4AEF950: _IO_do_write@@GLIBC_2.2.5 (fileops.c:423)
==8225==    by 0x4AED477: _IO_file_sync@@GLIBC_2.2.5 (fileops.c:799)
==8225==    by 0x4AE13C5: fflush (iofflush.c:40)
==8225==    by 0x49947A2: std::ostream::flush() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
==8225==    by 0x10AFCC: BinaryFile::Output() (BinaryFile.cpp:58)
==8225==    by 0x10A78D: main (main.cpp:14)
==8225== 
==8225== HEAP SUMMARY:
==8225==     in use at exit: 8,725 bytes in 3 blocks
==8225==   total heap usage: 198,659 allocs, 198,656 frees, 8,479,768 bytes allocated
==8225== 
==8225== LEAK SUMMARY:
==8225==    definitely lost: 0 bytes in 0 blocks
==8225==    indirectly lost: 0 bytes in 0 blocks
==8225==      possibly lost: 0 bytes in 0 blocks
==8225==    still reachable: 8,725 bytes in 3 blocks
==8225==         suppressed: 0 bytes in 0 blocks
==8225== Rerun with --leak-check=full to see details of leaked memory
==8225== 
==8225== Use --track-origins=yes to see where uninitialised values come from
==8225== For lists of detected and suppressed errors, rerun with: -s
==8225== ERROR SUMMARY: 7 errors from 1 contexts (suppressed: 0 from 0)
